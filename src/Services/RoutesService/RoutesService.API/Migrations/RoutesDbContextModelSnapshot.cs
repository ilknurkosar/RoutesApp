// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RoutesService.API.Data;

#nullable disable

namespace RoutesService.API.Migrations
{
    [DbContext(typeof(RoutesDbContext))]
    partial class RoutesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RoutesService.Domain.Entities.Izin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Izinler");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("EkleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<string>("KullaniciAdi")
                        .HasColumnType("text");

                    b.Property<int?>("RolId")
                        .HasColumnType("integer");

                    b.Property<string>("Sifre")
                        .HasColumnType("text");

                    b.Property<string>("SifreHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SilenKullaniciId")
                        .HasColumnType("text");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Soyad")
                        .HasColumnType("text");

                    b.Property<string>("Telefon")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.KullaniciRolleri", b =>
                {
                    b.Property<int>("KullaniciId")
                        .HasColumnType("integer");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.HasKey("KullaniciId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("KullaniciRolleri");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.KurumTanim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("EkleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<string>("SilenKullaniciId")
                        .HasColumnType("text");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Telefon")
                        .HasColumnType("text");

                    b.Property<string>("WebSitesi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Kurumlar");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("EkleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<string>("SilenKullaniciId")
                        .HasColumnType("text");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.RolIzinleri", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<int>("IzinId")
                        .HasColumnType("integer");

                    b.HasKey("RolId", "IzinId");

                    b.HasIndex("IzinId");

                    b.ToTable("RolIzinleri");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.RotaKategoriTanim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("EkleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<string>("SilenKullaniciId")
                        .HasColumnType("text");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("RotaKategoriler");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.RotaOnemliYerTanim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("AciklamaDetay")
                        .HasColumnType("text");

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<double?>("Boylam")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("EkleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<double?>("Enlem")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<int?>("RotaId")
                        .HasColumnType("integer");

                    b.Property<string>("SilenKullaniciId")
                        .HasColumnType("text");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("RotaId");

                    b.ToTable("RotaOnemliYerler");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.RotaResimTanim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("AciklamaDetay")
                        .HasColumnType("text");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("EkleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<byte[]>("Resim")
                        .HasColumnType("bytea");

                    b.Property<string>("ResimAdi")
                        .HasColumnType("text");

                    b.Property<long?>("ResimBoyut")
                        .HasColumnType("bigint");

                    b.Property<string>("ResimUzanti")
                        .HasColumnType("text");

                    b.Property<int?>("RotaId")
                        .HasColumnType("integer");

                    b.Property<string>("SilenKullaniciId")
                        .HasColumnType("text");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("RotaId");

                    b.ToTable("RotaResimler");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.RotaTanim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("Adi")
                        .HasColumnType("text");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("EkleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<Geometry>("Geometry")
                        .HasColumnType("geometry");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("integer");

                    b.Property<double?>("Mesafe")
                        .HasColumnType("double precision");

                    b.Property<string>("Renk")
                        .HasColumnType("text");

                    b.Property<string>("SilenKullaniciId")
                        .HasColumnType("text");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("TahminiSureDakika")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Rotalar");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.RotaYorumTanim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("EkleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("integer");

                    b.Property<int?>("Puan")
                        .HasColumnType("integer");

                    b.Property<int?>("RotaId")
                        .HasColumnType("integer");

                    b.Property<string>("SilenKullaniciId")
                        .HasColumnType("text");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Yorum")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("RotaId");

                    b.ToTable("RotaYorumlar");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.YetkiAlaniTanim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("EkleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<Geometry>("Geometry")
                        .HasColumnType("geometry");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("text");

                    b.Property<int?>("KurumId")
                        .HasColumnType("integer");

                    b.Property<string>("SilenKullaniciId")
                        .HasColumnType("text");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("KurumId");

                    b.ToTable("YetkiAlanlari");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.Kullanici", b =>
                {
                    b.HasOne("RoutesService.Domain.Entities.Rol", "Rol")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("RolId");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.KullaniciRolleri", b =>
                {
                    b.HasOne("RoutesService.Domain.Entities.Kullanici", "Kullanici")
                        .WithMany("KullaniciRolleri")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoutesService.Domain.Entities.Rol", "Rol")
                        .WithMany("KullaniciRolleri")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.RolIzinleri", b =>
                {
                    b.HasOne("RoutesService.Domain.Entities.Izin", "Izin")
                        .WithMany("RolIzinleri")
                        .HasForeignKey("IzinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoutesService.Domain.Entities.Rol", "Rol")
                        .WithMany("RolIzinleri")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Izin");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.RotaOnemliYerTanim", b =>
                {
                    b.HasOne("RoutesService.Domain.Entities.RotaTanim", "Rota")
                        .WithMany("OnemliYerler")
                        .HasForeignKey("RotaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Rota");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.RotaResimTanim", b =>
                {
                    b.HasOne("RoutesService.Domain.Entities.RotaTanim", "Rota")
                        .WithMany("Resimler")
                        .HasForeignKey("RotaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Rota");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.RotaTanim", b =>
                {
                    b.HasOne("RoutesService.Domain.Entities.RotaKategoriTanim", "Kategori")
                        .WithMany("Rotalar")
                        .HasForeignKey("KategoriId");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.RotaYorumTanim", b =>
                {
                    b.HasOne("RoutesService.Domain.Entities.Kullanici", "Kullanici")
                        .WithMany("Yorumlar")
                        .HasForeignKey("KullaniciId");

                    b.HasOne("RoutesService.Domain.Entities.RotaTanim", "Rota")
                        .WithMany("Yorumlar")
                        .HasForeignKey("RotaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Kullanici");

                    b.Navigation("Rota");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.YetkiAlaniTanim", b =>
                {
                    b.HasOne("RoutesService.Domain.Entities.KurumTanim", "Kurum")
                        .WithMany("YetkiAlanlari")
                        .HasForeignKey("KurumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Kurum");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.Izin", b =>
                {
                    b.Navigation("RolIzinleri");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.Kullanici", b =>
                {
                    b.Navigation("KullaniciRolleri");

                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.KurumTanim", b =>
                {
                    b.Navigation("YetkiAlanlari");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.Rol", b =>
                {
                    b.Navigation("KullaniciRolleri");

                    b.Navigation("Kullanicilar");

                    b.Navigation("RolIzinleri");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.RotaKategoriTanim", b =>
                {
                    b.Navigation("Rotalar");
                });

            modelBuilder.Entity("RoutesService.Domain.Entities.RotaTanim", b =>
                {
                    b.Navigation("OnemliYerler");

                    b.Navigation("Resimler");

                    b.Navigation("Yorumlar");
                });
#pragma warning restore 612, 618
        }
    }
}
